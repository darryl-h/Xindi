version: '3.8'
# This is a media center container cluster
# 2022-12-16A
# Management Web Portals:
# Sonarr  - 8989
# Radarr  - 7878
# NZBGet  - 6789
# Tdarr   - 8265
# Plex    - 32400/web
# Deluge  - 8112
# jackett - 9117

services:
# Media Server
  plex_server:
    image: lscr.io/linuxserver/plex:latest
    container_name: xindi_plex
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    network_mode: host
    ports:
      - '8888:8888'
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - ./plex/config:/config
      - /docker/data/media/series:/tv
      - /docker/data/media/movies:/movies

# Media Compression
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: xindi_tdarr
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    network_mode: bridge
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
      - 8268:8268 # Example extra node port
    environment:
      - TZ=America/New_York
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeID=MyInternalNode
    volumes:
      - ./tdarr/config:/app/configs
      - ./tdarr/server:/app/server
      - ./tdarr/logs:/app/logs
      - ./tdarr/transcode_cache:/temp
      - /docker/data/media/:/media

# TV Show Monitoring
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: xindi_sonarr
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - 8989:8989/tcp # Web UI
    environment:
      - TZ=America/New_York # Specify a timezone to use
      - PUID=1000 # User ID to run as
      - PGID=1000 # Group ID to run as
    volumes:
      - ./sonarr/config:/config # Contains all relevant configuration files.
      - /docker/data/media/series:/data # Location of all your media
      - /docker/data/download:/downloads #optional

# Movie Monitoring
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: xindi_radarr
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - 7878:7878/tcp # The port for the Radarr webinterface
    environment:
      - UMASK_SET=022 # control permissions of files and directories created by Radarr
      - TZ=America/New_York # Specify a timezone to use EG America/New_York, this is required for Radarr
      - PUID=1000 # for UserID
      - PGID=1000 # for GroupID
    volumes:
      - ./radarr/config:/config # Database and Radarr configs
      - /docker/data/media/movies:/movies # Location of Movie library on disk (See note in Application setup)
      - /docker/data/download:/downloads # Location of download managers output directory (See note in Application setup)

# DOWNLOADS - Newsgroups
  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: xindi_nzbget
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - '6789:6789'
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - NZBGET_USER=USERNAME #optional
      - NZBGET_PASS=PASSWORD #optional
    volumes:
      - ./nzbget/config:/config
      - /docker/data/download:/downloads #optional

# VPN
  vpn:
    image: dperson/openvpn-client
    container_name: xindi_vpnclient
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    cap_add:
      - net_admin # required to modify network interfaces
    volumes:
      - /dev/net/tun:/dev/net/tun # tun device
      - ./vpnclient/config:/vpn # OpenVPN configuration
    security_opt:
      - label:disable
    ports:
      # Deluge
      - 8112:8112 # port for deluge web UI to be reachable from local network
      - 51413:51413 # Make sure you configure Deluge to use this port as the incoming port!
      - 51413:51413/udp
    entrypoint: ["/sbin/tini", "--", "/usr/bin/openvpn.sh", "-d"]

# DOWNLOADS - Torrents / OpenVPN
  deluge:
    image: lscr.io/linuxserver/deluge
    container_name: xindi_deluge
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    network_mode: service:vpn # run on the vpn network (This is NOT the container_name)
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /docker/data/download:/download # downloads folder
      - ./deluge/config:/config # config files

# DOWNLOADS - Torrent Indexer
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: xindi_jackett
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    ports:
      - 9117:9117
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - AUTO_UPDATE=true #optional
      - RUN_OPTS=<run options here> #optional
    volumes:
      - ./jackett/config:/config
      - ./jackett/downloads:/downloads

  # tdarr-node:
  #   container_name: tdarr-node
  #   image: ghcr.io/haveagitgat/tdarr_node:latest
  #   restart: unless-stopped
  #   network_mode: service:tdarr
  #   environment:
  #     - TZ=Europe/London
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - UMASK_SET=002
  #     - nodeID=MainNode
  #     - serverIP=0.0.0.0
  #     - serverPort=8266
  #   volumes:
  #     - /docker/tdarr/configs:/app/configs
  #     - /docker/tdarr/logs:/app/logs
  #     - /media:/media
  #     - /transcode_cache:/temp
